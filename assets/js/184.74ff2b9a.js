(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{1511:function(t,e,s){"use strict";s.r(e);var a=s(27),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"key-concepts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-concepts"}},[t._v("#")]),t._v(" Key Concepts")]),t._v(" "),a("p",[t._v("To get the most out of n8n's functionalities and build powerful workflows, it's important to understand some basic concepts.")]),t._v(" "),a("h2",{attrs:{id:"expression"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expression"}},[t._v("#")]),t._v(" Expression")]),t._v(" "),a("p",[t._v("An expression is a string of characters and symbols in a programming language that represents a value depending upon its input.\nn8n uses "),a("RouterLink",{attrs:{to:"/nodes/expressions.html"}},[t._v("expressions")]),t._v(" extensively when a node refers to another node for input.")],1),t._v(" "),a("p",[a("img",{attrs:{src:s(473),alt:"Node expression"}})]),t._v(" "),a("h2",{attrs:{id:"item"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item"}},[t._v("#")]),t._v(" Item")]),t._v(" "),a("p",[t._v("Data sent from one node to another is sent as an array of JSON objects. Each element in this collection is called an "),a("strong",[t._v("Item")]),t._v(". A node performs its action on each item of incoming data.")]),t._v(" "),a("h2",{attrs:{id:"function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" Function")]),t._v(" "),a("p",[t._v("A function is a block of code designed to perform a certain task. In n8n, you can write custom "),a("RouterLink",{attrs:{to:"/reference/javascript-code-snippets.html"}},[t._v("JavaScript code snippets")]),t._v(" to add, remove, and update the data you receive from a node.")],1),t._v(" "),a("p",[t._v("The "),a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/Function/"}},[t._v("Function")]),t._v(" and "),a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/FunctionItem/"}},[t._v("Function Item")]),t._v(" nodes are the most powerful in n8n. Both nodes work very similarly, they give you access to the incoming data and you can manipulate it. With these nodes you can implement any function you want using JavaScript code.")],1),t._v(" "),a("p",[t._v("The code of the "),a("strong",[t._v("Function node")]),t._v(" gets executed only once. The node receives the full items (JSON and binary data) as an array and expects an array of items as a return value. The items returned can be totally different from the incoming ones. So it is not only possible to remove and edit existing items, but also to add or return totally new ones.")]),t._v(" "),a("p",[t._v("The code of the "),a("strong",[t._v("Function Item node")]),t._v(" gets executed once for every item. The node receives one item (just the JSON data) at a time as input. As a return value, it expects the JSON data of one single item. That makes it possible to add, remove, and edit JSON properties of items, but it is not possible to add new or remove existing items. Accessing and changing binary data is only possible via the methods "),a("code",[t._v("getBinaryData")]),t._v(" and "),a("code",[t._v("setBinaryData")]),t._v(".")]),t._v(" "),a("p",[t._v("Both the Function node and Function Item node support promises. So instead of returning the item or items directly, it is also possible to return a promise which resolves accordingly.")]),t._v(" "),a("p",[t._v("Here is a comparative overview of the Function and Function Item nodes:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Data to access")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Function")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("FunctionItem")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("JSON data")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("items["),a("em",[t._v("index")]),t._v("].json")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("item")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Binary data")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("items["),a("em",[t._v("index")]),t._v("].binary")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("getBinaryData()")])])])]),t._v(" "),a("h2",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" Data")]),t._v(" "),a("p",[t._v('Data represents units of information that are collected by and transmitted through nodes. For "basic usage" it is not necessarily needed to understand how the data that gets passed from one node to another is structured. However, it becomes important if you want to:')]),t._v(" "),a("ul",[a("li",[t._v("Create your own node")]),t._v(" "),a("li",[t._v("Write custom expressions")]),t._v(" "),a("li",[t._v("Use the Function or Function Item node")])]),t._v(" "),a("h3",{attrs:{id:"data-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-structure"}},[t._v("#")]),t._v(" Data Structure")]),t._v(" "),a("p",[t._v("In n8n, all the data that is passed between nodes is an array of objects. It has the following structure:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Each item has to contain a "json" property. But it can be an empty object like {}.')]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Any kind of JSON data is allowed. So arrays and the data being deeply nested is fine.")]),t._v("\n\t\tjson"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The actual data n8n operates on (required)")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This data is only an example it could be any kind of JSON data")]),t._v("\n\t\t\tjsonKeyName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'keyValue'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\tanotherJsonKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tlowerLevelJsonKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Binary data of item. The most items in n8n do not contain any (optional)")]),t._v("\n\t\tbinary"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// The key-name "binaryKeyName" is only an example. Any kind of key-name is possible.')]),t._v("\n\t\t\tbinaryKeyName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tdata"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" '....'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Base64 encoded binary data (required)")]),t._v("\n\t\t\t\tmimeType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'image/png'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Optional but should be set if possible (optional)")]),t._v("\n\t\t\t\tfileExtension"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'png'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Optional but should be set if possible (optional)")]),t._v("\n\t\t\t\tfileName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'example.png'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Optional but should be set if possible (optional)")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"data-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-flow"}},[t._v("#")]),t._v(" Data Flow")]),t._v(" "),a("p",[t._v('Nodes do not only process one "item", they process multiple ones.\nFor example, if the Trello node is set to '),a("code",[t._v("Create-Card")]),t._v(" and it has an expression set for "),a("code",[t._v("Name")]),t._v(" to be set depending on "),a("code",[t._v("name")]),t._v(" property, it will create a card for each item, always choosing the "),a("code",[t._v("name-property-value")]),t._v(" of the current one.")]),t._v(" "),a("p",[t._v("This data would, for example, create two boards. One named "),a("code",[t._v("test1")]),t._v(" the other one named "),a("code",[t._v("test2")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test1"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test2"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"loops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loops"}},[t._v("#")]),t._v(" Loops")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Control_flow#Loops",target:"_blank",rel:"noopener noreferrer"}},[t._v("Looping"),a("OutboundLink")],1),t._v(" is useful when you need to perform the same action repeatedly over the same, or similar, items.")]),t._v(" "),a("p",[t._v("In n8n this is handled automatically, with nodes processing each input item (data point) independently. For example, if you pass 100 items to an "),a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/Airtable/"}},[t._v("Airtable")]),t._v(" node all 100 will be added to your table, no loop required.")],1),t._v(" "),a("p",[t._v("Actions where you would typically use loops, such as "),a("RouterLink",{attrs:{to:"/reference/javascript-code-snippets.html#modify-data-structure"}},[t._v("modifying data structure")]),t._v(" or "),a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/Merge/"}},[t._v("merging data")]),t._v(", do not require explicit loops in n8n.")],1),t._v(" "),a("p",[t._v("There are a limited number of nodes and operations where you need to design a loop into your workflow:")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/Airtable/"}},[a("strong",[t._v("Airtable")])]),t._v(" node:\n"),a("ul",[a("li",[a("strong",[t._v("List")]),t._v(": This operation executes only once, not for each incoming item.")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/Coda/"}},[a("strong",[t._v("Coda")])]),t._v(" node:\n"),a("ul",[a("li",[a("strong",[t._v("Get All")]),t._v(": For the Table and View resources, this operation executes only once.")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/crateDb/"}},[a("strong",[t._v("CrateDB")])]),t._v(" node will execute and iterate over all incoming items only for Postgres related functions (e.g. "),a("code",[t._v("pgInsert")]),t._v(", "),a("code",[t._v("pgUpdate")]),t._v(", "),a("code",[t._v("pqQuery")]),t._v(").")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/ExecuteWorkflow/"}},[a("strong",[t._v("Execute Workflow")])]),t._v(" node executes only once by default.")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/Function/"}},[a("strong",[t._v("Function")])]),t._v(" node processes all the items based on the entered code snippet, but it gets executed only once. If you need to execute the Function node multiple times you have to create a loop using the "),a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/SplitInBatches/"}},[t._v("Split In Batches")]),t._v(" node.")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/GoogleCloudFirestore/"}},[a("strong",[t._v("Google Cloud Firestore")])]),t._v(" node:\n"),a("ul",[a("li",[a("strong",[t._v("Get All")]),t._v(": For the Collection and Document resources, this operation executes only once.")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/httpRequest/"}},[a("strong",[t._v("HTTP Request")])]),t._v(" node: You must handle pagination yourself. If your API call returns paginated results you must create a loop to fetch one page at a time.")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/microsoftSql/"}},[a("strong",[t._v("Microsoft SQL")])]),t._v(" node does not natively handle looping, so if you want the node to process all incoming items you must create a loop.")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/postgres/"}},[a("strong",[t._v("Postgres")])]),t._v(" node will execute and iterate over all incoming items only for Postgres related functions (e.g. "),a("code",[t._v("pgInsert")]),t._v(", "),a("code",[t._v("pgUpdate")]),t._v(", "),a("code",[t._v("pqQuery")]),t._v(").")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/QuestDb/"}},[a("strong",[t._v("QuestDB")])]),t._v(" node will execute and iterate over all incoming items only for Postgres related functions (e.g. "),a("code",[t._v("pgInsert")]),t._v(", "),a("code",[t._v("pgUpdate")]),t._v(", "),a("code",[t._v("pqQuery")]),t._v(").")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/readBinaryFiles/"}},[a("strong",[t._v("Read Binary Files")])]),t._v(" node will fetch the files from the specified path only once. This node doesn’t execute multiple times based on the incoming data. However, if the path is referenced from the incoming data, the node will fetch the files for all the valid paths.")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/redis/"}},[a("strong",[t._v("Redis")])]),t._v(" node:\n"),a("ul",[a("li",[a("strong",[t._v("Info")]),t._v(": This operation executes only once, regardless of the number of items in the incoming data.")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/SpreadsheetFile/"}},[a("strong",[t._v("Spreadsheet")])]),t._v(" node processes all the incoming data and creates a single file with all the incoming data. If you want to create individual files for each incoming item, you have to create a loop.")],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/nodes/nodes-library/nodes/TimescaleDb/"}},[a("strong",[t._v("TimescaleDB")])]),t._v(" node will execute and iterate over all incoming items only for Postgres related functions (e.g. "),a("code",[t._v("pgInsert")]),t._v(", "),a("code",[t._v("pgUpdate")]),t._v(", "),a("code",[t._v("pqQuery")]),t._v(").")],1)]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("💡 Keep in mind")]),t._v(" "),a("p",[t._v("Most APIs will have a limit on the number of requests you can make, using loops helps can ensure you don't exceed this limit. See also "),a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/SplitInBatches/"}},[t._v("Split In Batches")]),t._v(" node.")],1)]),t._v(" "),a("h3",{attrs:{id:"creating-loops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-loops"}},[t._v("#")]),t._v(" Creating Loops")]),t._v(" "),a("p",[t._v("To add a loop to your n8n workflow, connect the output of one node to the input of a previous node.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(474),alt:"A workflow with a loop."}})]),t._v(" "),a("p",[a("strong",[t._v("Make sure to include an "),a("RouterLink",{attrs:{to:"/nodes/nodes-library/core-nodes/if/"}},[t._v("IF")]),t._v("  node to check for a condition and stop the loop.")],1)]),t._v(" "),a("h2",{attrs:{id:"error-workflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-workflow"}},[t._v("#")]),t._v(" Error Workflow")]),t._v(" "),a("p",[t._v("For each workflow, an optional Error Workflow can be set in the Workflow Settings. It gets executed if the original execution fails. That makes it possible to, for instance, inform the user via Email or Slack if something goes wrong. The same Error Workflow can be set on multiple workflows.")]),t._v(" "),a("p",[t._v("The only difference between a regular workflow and an Error Workflow is that it contains an Error Trigger node, so it is important to make sure that this node gets created before setting a workflow as Error Workflow.")]),t._v(" "),a("p",[t._v("The Error Trigger node will trigger in case the execution fails and receives information about it. The data looks like this:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"execution"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"231"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://n8n.example.com/execution/231"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"retryOf"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"34"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Example Error Message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stack"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Stacktrace"')]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lastNodeExecuted"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node With Error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"manual"')]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"workflow"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Example Workflow"')]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),a("p",[t._v("All information is always present except:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("execution.id")]),t._v(": Only present when the execution gets saved in the database")]),t._v(" "),a("li",[a("strong",[t._v("execution.url")]),t._v(": Only present when the execution gets saved in the database")]),t._v(" "),a("li",[a("strong",[t._v("execution.retryOf")]),t._v(": Only present when the execution is a retry of a previously failed execution")])]),t._v(" "),a("h2",{attrs:{id:"security"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security"}},[t._v("#")]),t._v(" Security")]),t._v(" "),a("p",[t._v("By default, n8n can be accessed by everybody. This is okay if you only have it running\nlocally but if you deploy it on a server which is accessible from the web, you have\nto make sure that n8n is protected.")]),t._v(" "),a("h3",{attrs:{id:"basic-auth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-auth"}},[t._v("#")]),t._v(" Basic Auth")]),t._v(" "),a("p",[t._v("Right now we have very basic protection in place using basic-auth. It can be activated\nby setting the following environment variables:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("N8N_BASIC_AUTH_ACTIVE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("N8N_BASIC_AUTH_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("N8N_BASIC_AUTH_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PASSWORD"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"jwt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt"}},[t._v("#")]),t._v(" JWT")]),t._v(" "),a("p",[t._v("There is also limited support for JWT based authentication. If enabled, n8n will verify the token with the provided JSON Web Key Set URI. It can be configured through the following environment variables:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("N8N_JWT_AUTH_ACTIVE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("N8N_JWT_AUTH_HEADER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HEADER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("N8N_JWKS_URI")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("URI"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("Keep in mind that there is currently no built-in way of passing down the Token in the request, so to use JWT you have to have the token in the request manually.")])])}),[],!1,null,null,null);e.default=n.exports},473:function(t,e,s){t.exports=s.p+"assets/img/Node_expression.501a6826.gif"},474:function(t,e,s){t.exports=s.p+"assets/img/loops.cc485bb9.png"}}]);